// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.6.0'
        classpath 'org.jacoco:org.jacoco.core:0.8.0'
        

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven {
            url "https://maven.google.com" // Google's Maven repository
        }
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Defining versions in a single place
ext {
    // Sdk and tools
minSdkVersion = 15
targetSdkVersion = 28
compileSdkVersion = 28
buildToolsVersion = '28.0.2'

// App dependencies
supportLibraryVersion = '27.1.1'
guavaVersion = '18.0'
glideVersion = '3.6.1'
junitVersion = '4.12'
mockitoVersion = '1.10.19'
powerMockito = '1.6.2'
hamcrestVersion = '1.3'
runnerVersion = '1.0.2'
rulesVersion = '1.0.2'
espressoVersion = '3.0.2'
recyclerviewVersion = '28.0.0'
designVersion = '28.0.0'
espressoContrib= '2.2.2'
room = '1.0.0-rc1'

}


apply plugin: 'com.vanniktech.android.junit.jacoco'


task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

//    subprojects.each {
//        sourceSets it.sourceSets.main
//    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/coverage/debug/report.xml")
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}
